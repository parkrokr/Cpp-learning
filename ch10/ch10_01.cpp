//객체들의 관계 Object Relationship

//				관계를 표현하는 동사		예시
//
// 구성(요소)	Part-of					'두뇌'는 '육체'의 일부이다
//Composition
//
// 집합			 Has-a					어떤 '사람'이 '자동차'를 가지고 있다
//Aggregation
//
// 연계, 제휴	Uses-a					'환자'는 '의사'의 치료를 받는다
//Association							'의사'는 '환자들'로부터 치료비를 받는다
//
// 의존			Depends-on				'나'는 (다리가 부러져서 한달동안) '목발'을 짚었다
//Dependency

//Is-a 는 별도로 다룸


//구성 은 두뇌는 육체없이 존재할 수 없고 두뇌가 없으면 육체가 죽기 때문에 육체는 두뇌를 관리할 의무가 있음
//두뇌가 육체 전부를 알고 있지는 않음

//집합은 구성보단 좀더 느슨함. 사람이 없어져도 자동차는 존재함

//연계,제휴 는 더 느슨함,  단순히 사용하는 관계. 한 환자가 여러 의사를 만날 수 있고 
//한 의사는 여러 환자를 만날 수 있음

//의존은 더 느슨함, 다리가 다 나은 후에는 목발을 버림, 내가 사라진다고 해서 목발이 사라지는건 아님


//				관계를 표현하는 		관계의 형태			다른 클래스에도		멤버의 존재를			방향성
//				동사										속할 수 있는가?		클래스가 관리?
//
// 구성(요소)	Part-of				전체/부품			No					Yes					단방향
//Composition
//
// 집합			 Has-a				전체/부품			Yes					No					단방향
//Aggregation
//	
// 연계, 제휴	Uses-a				용도 외엔 무관		Yes					NO					단방향 or
//Association																					양방향
//
// 의존			Depends-on			용도 외엔 무관		Yes					Yes					단방향 or
//Dependency																					양방향													


int main()
{
	return 0;
}